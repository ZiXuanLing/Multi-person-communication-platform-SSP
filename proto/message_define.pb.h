// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_define.proto

#ifndef PROTOBUF_INCLUDED_message_5fdefine_2eproto
#define PROTOBUF_INCLUDED_message_5fdefine_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fdefine_2eproto 

namespace protobuf_message_5fdefine_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_message_5fdefine_2eproto
namespace ssp {
class AddFriendReq;
class AddFriendReqDefaultTypeInternal;
extern AddFriendReqDefaultTypeInternal _AddFriendReq_default_instance_;
class AddFriendRsp;
class AddFriendRspDefaultTypeInternal;
extern AddFriendRspDefaultTypeInternal _AddFriendRsp_default_instance_;
class GetMessageReq;
class GetMessageReqDefaultTypeInternal;
extern GetMessageReqDefaultTypeInternal _GetMessageReq_default_instance_;
class GetMessageRsp;
class GetMessageRspDefaultTypeInternal;
extern GetMessageRspDefaultTypeInternal _GetMessageRsp_default_instance_;
class GetPhotoReq;
class GetPhotoReqDefaultTypeInternal;
extern GetPhotoReqDefaultTypeInternal _GetPhotoReq_default_instance_;
class GetPhotoRsq;
class GetPhotoRsqDefaultTypeInternal;
extern GetPhotoRsqDefaultTypeInternal _GetPhotoRsq_default_instance_;
class LoginReq;
class LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class LoginRsp;
class LoginRspDefaultTypeInternal;
extern LoginRspDefaultTypeInternal _LoginRsp_default_instance_;
class LogoutReq;
class LogoutReqDefaultTypeInternal;
extern LogoutReqDefaultTypeInternal _LogoutReq_default_instance_;
class LogoutRsp;
class LogoutRspDefaultTypeInternal;
extern LogoutRspDefaultTypeInternal _LogoutRsp_default_instance_;
class MessageBase;
class MessageBaseDefaultTypeInternal;
extern MessageBaseDefaultTypeInternal _MessageBase_default_instance_;
class PublishMessageReq;
class PublishMessageReqDefaultTypeInternal;
extern PublishMessageReqDefaultTypeInternal _PublishMessageReq_default_instance_;
class PublishMessageRsp;
class PublishMessageRspDefaultTypeInternal;
extern PublishMessageRspDefaultTypeInternal _PublishMessageRsp_default_instance_;
}  // namespace ssp
namespace google {
namespace protobuf {
template<> ::ssp::AddFriendReq* Arena::CreateMaybeMessage<::ssp::AddFriendReq>(Arena*);
template<> ::ssp::AddFriendRsp* Arena::CreateMaybeMessage<::ssp::AddFriendRsp>(Arena*);
template<> ::ssp::GetMessageReq* Arena::CreateMaybeMessage<::ssp::GetMessageReq>(Arena*);
template<> ::ssp::GetMessageRsp* Arena::CreateMaybeMessage<::ssp::GetMessageRsp>(Arena*);
template<> ::ssp::GetPhotoReq* Arena::CreateMaybeMessage<::ssp::GetPhotoReq>(Arena*);
template<> ::ssp::GetPhotoRsq* Arena::CreateMaybeMessage<::ssp::GetPhotoRsq>(Arena*);
template<> ::ssp::LoginReq* Arena::CreateMaybeMessage<::ssp::LoginReq>(Arena*);
template<> ::ssp::LoginRsp* Arena::CreateMaybeMessage<::ssp::LoginRsp>(Arena*);
template<> ::ssp::LogoutReq* Arena::CreateMaybeMessage<::ssp::LogoutReq>(Arena*);
template<> ::ssp::LogoutRsp* Arena::CreateMaybeMessage<::ssp::LogoutRsp>(Arena*);
template<> ::ssp::MessageBase* Arena::CreateMaybeMessage<::ssp::MessageBase>(Arena*);
template<> ::ssp::PublishMessageReq* Arena::CreateMaybeMessage<::ssp::PublishMessageReq>(Arena*);
template<> ::ssp::PublishMessageRsp* Arena::CreateMaybeMessage<::ssp::PublishMessageRsp>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ssp {

// ===================================================================

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginReq(LoginReq&& from) noexcept
    : LoginReq() {
    *this = ::std::move(from);
  }

  inline LoginReq& operator=(LoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LoginReq* other);
  friend void swap(LoginReq& a, LoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginReq* New() const final {
    return CreateMaybeMessage<LoginReq>(NULL);
  }

  LoginReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string password = 4;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 4;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.LoginReq)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_user_id();
  void clear_has_user_id();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 user_id_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.LoginRsp) */ {
 public:
  LoginRsp();
  virtual ~LoginRsp();

  LoginRsp(const LoginRsp& from);

  inline LoginRsp& operator=(const LoginRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRsp(LoginRsp&& from) noexcept
    : LoginRsp() {
    *this = ::std::move(from);
  }

  inline LoginRsp& operator=(LoginRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRsp* internal_default_instance() {
    return reinterpret_cast<const LoginRsp*>(
               &_LoginRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LoginRsp* other);
  friend void swap(LoginRsp& a, LoginRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRsp* New() const final {
    return CreateMaybeMessage<LoginRsp>(NULL);
  }

  LoginRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginRsp& from);
  void MergeFrom(const LoginRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 ret = 3;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 3;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.LoginRsp)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 ret_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.LogoutReq) */ {
 public:
  LogoutReq();
  virtual ~LogoutReq();

  LogoutReq(const LogoutReq& from);

  inline LogoutReq& operator=(const LogoutReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogoutReq(LogoutReq&& from) noexcept
    : LogoutReq() {
    *this = ::std::move(from);
  }

  inline LogoutReq& operator=(LogoutReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogoutReq* internal_default_instance() {
    return reinterpret_cast<const LogoutReq*>(
               &_LogoutReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LogoutReq* other);
  friend void swap(LogoutReq& a, LogoutReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogoutReq* New() const final {
    return CreateMaybeMessage<LogoutReq>(NULL);
  }

  LogoutReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LogoutReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LogoutReq& from);
  void MergeFrom(const LogoutReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.LogoutReq)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_user_id();
  void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 user_id_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.LogoutRsp) */ {
 public:
  LogoutRsp();
  virtual ~LogoutRsp();

  LogoutRsp(const LogoutRsp& from);

  inline LogoutRsp& operator=(const LogoutRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogoutRsp(LogoutRsp&& from) noexcept
    : LogoutRsp() {
    *this = ::std::move(from);
  }

  inline LogoutRsp& operator=(LogoutRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogoutRsp* internal_default_instance() {
    return reinterpret_cast<const LogoutRsp*>(
               &_LogoutRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(LogoutRsp* other);
  friend void swap(LogoutRsp& a, LogoutRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogoutRsp* New() const final {
    return CreateMaybeMessage<LogoutRsp>(NULL);
  }

  LogoutRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LogoutRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LogoutRsp& from);
  void MergeFrom(const LogoutRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogoutRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 ret = 3;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 3;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.LogoutRsp)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 ret_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.MessageBase) */ {
 public:
  MessageBase();
  virtual ~MessageBase();

  MessageBase(const MessageBase& from);

  inline MessageBase& operator=(const MessageBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageBase(MessageBase&& from) noexcept
    : MessageBase() {
    *this = ::std::move(from);
  }

  inline MessageBase& operator=(MessageBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageBase* internal_default_instance() {
    return reinterpret_cast<const MessageBase*>(
               &_MessageBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MessageBase* other);
  friend void swap(MessageBase& a, MessageBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageBase* New() const final {
    return CreateMaybeMessage<MessageBase>(NULL);
  }

  MessageBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageBase& from);
  void MergeFrom(const MessageBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content = 4;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 message_id = 2;
  bool has_message_id() const;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 2;
  ::google::protobuf::int32 message_id() const;
  void set_message_id(::google::protobuf::int32 value);

  // optional int32 publisher = 3;
  bool has_publisher() const;
  void clear_publisher();
  static const int kPublisherFieldNumber = 3;
  ::google::protobuf::int32 publisher() const;
  void set_publisher(::google::protobuf::int32 value);

  // optional int32 publish_time = 5;
  bool has_publish_time() const;
  void clear_publish_time();
  static const int kPublishTimeFieldNumber = 5;
  ::google::protobuf::int32 publish_time() const;
  void set_publish_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.MessageBase)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_message_id();
  void clear_has_message_id();
  void set_has_publisher();
  void clear_has_publisher();
  void set_has_content();
  void clear_has_content();
  void set_has_publish_time();
  void clear_has_publish_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 message_id_;
  ::google::protobuf::int32 publisher_;
  ::google::protobuf::int32 publish_time_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.PublishMessageReq) */ {
 public:
  PublishMessageReq();
  virtual ~PublishMessageReq();

  PublishMessageReq(const PublishMessageReq& from);

  inline PublishMessageReq& operator=(const PublishMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishMessageReq(PublishMessageReq&& from) noexcept
    : PublishMessageReq() {
    *this = ::std::move(from);
  }

  inline PublishMessageReq& operator=(PublishMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishMessageReq* internal_default_instance() {
    return reinterpret_cast<const PublishMessageReq*>(
               &_PublishMessageReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PublishMessageReq* other);
  friend void swap(PublishMessageReq& a, PublishMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishMessageReq* New() const final {
    return CreateMaybeMessage<PublishMessageReq>(NULL);
  }

  PublishMessageReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishMessageReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishMessageReq& from);
  void MergeFrom(const PublishMessageReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content = 4;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.PublishMessageReq)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_user_id();
  void clear_has_user_id();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 user_id_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishMessageRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.PublishMessageRsp) */ {
 public:
  PublishMessageRsp();
  virtual ~PublishMessageRsp();

  PublishMessageRsp(const PublishMessageRsp& from);

  inline PublishMessageRsp& operator=(const PublishMessageRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishMessageRsp(PublishMessageRsp&& from) noexcept
    : PublishMessageRsp() {
    *this = ::std::move(from);
  }

  inline PublishMessageRsp& operator=(PublishMessageRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishMessageRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishMessageRsp* internal_default_instance() {
    return reinterpret_cast<const PublishMessageRsp*>(
               &_PublishMessageRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(PublishMessageRsp* other);
  friend void swap(PublishMessageRsp& a, PublishMessageRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishMessageRsp* New() const final {
    return CreateMaybeMessage<PublishMessageRsp>(NULL);
  }

  PublishMessageRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishMessageRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishMessageRsp& from);
  void MergeFrom(const PublishMessageRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishMessageRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 ret = 3;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 3;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.PublishMessageRsp)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 ret_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.GetMessageReq) */ {
 public:
  GetMessageReq();
  virtual ~GetMessageReq();

  GetMessageReq(const GetMessageReq& from);

  inline GetMessageReq& operator=(const GetMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMessageReq(GetMessageReq&& from) noexcept
    : GetMessageReq() {
    *this = ::std::move(from);
  }

  inline GetMessageReq& operator=(GetMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMessageReq* internal_default_instance() {
    return reinterpret_cast<const GetMessageReq*>(
               &_GetMessageReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(GetMessageReq* other);
  friend void swap(GetMessageReq& a, GetMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMessageReq* New() const final {
    return CreateMaybeMessage<GetMessageReq>(NULL);
  }

  GetMessageReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMessageReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMessageReq& from);
  void MergeFrom(const GetMessageReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.GetMessageReq)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_user_id();
  void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 user_id_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMessageRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.GetMessageRsp) */ {
 public:
  GetMessageRsp();
  virtual ~GetMessageRsp();

  GetMessageRsp(const GetMessageRsp& from);

  inline GetMessageRsp& operator=(const GetMessageRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMessageRsp(GetMessageRsp&& from) noexcept
    : GetMessageRsp() {
    *this = ::std::move(from);
  }

  inline GetMessageRsp& operator=(GetMessageRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMessageRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMessageRsp* internal_default_instance() {
    return reinterpret_cast<const GetMessageRsp*>(
               &_GetMessageRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GetMessageRsp* other);
  friend void swap(GetMessageRsp& a, GetMessageRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMessageRsp* New() const final {
    return CreateMaybeMessage<GetMessageRsp>(NULL);
  }

  GetMessageRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMessageRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMessageRsp& from);
  void MergeFrom(const GetMessageRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMessageRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ssp.MessageBase message_list = 4;
  int message_list_size() const;
  void clear_message_list();
  static const int kMessageListFieldNumber = 4;
  ::ssp::MessageBase* mutable_message_list(int index);
  ::google::protobuf::RepeatedPtrField< ::ssp::MessageBase >*
      mutable_message_list();
  const ::ssp::MessageBase& message_list(int index) const;
  ::ssp::MessageBase* add_message_list();
  const ::google::protobuf::RepeatedPtrField< ::ssp::MessageBase >&
      message_list() const;

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 ret = 3;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 3;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.GetMessageRsp)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ssp::MessageBase > message_list_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 ret_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPhotoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.GetPhotoReq) */ {
 public:
  GetPhotoReq();
  virtual ~GetPhotoReq();

  GetPhotoReq(const GetPhotoReq& from);

  inline GetPhotoReq& operator=(const GetPhotoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPhotoReq(GetPhotoReq&& from) noexcept
    : GetPhotoReq() {
    *this = ::std::move(from);
  }

  inline GetPhotoReq& operator=(GetPhotoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPhotoReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPhotoReq* internal_default_instance() {
    return reinterpret_cast<const GetPhotoReq*>(
               &_GetPhotoReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GetPhotoReq* other);
  friend void swap(GetPhotoReq& a, GetPhotoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPhotoReq* New() const final {
    return CreateMaybeMessage<GetPhotoReq>(NULL);
  }

  GetPhotoReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetPhotoReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetPhotoReq& from);
  void MergeFrom(const GetPhotoReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPhotoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.GetPhotoReq)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_user_id();
  void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 user_id_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPhotoRsq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.GetPhotoRsq) */ {
 public:
  GetPhotoRsq();
  virtual ~GetPhotoRsq();

  GetPhotoRsq(const GetPhotoRsq& from);

  inline GetPhotoRsq& operator=(const GetPhotoRsq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPhotoRsq(GetPhotoRsq&& from) noexcept
    : GetPhotoRsq() {
    *this = ::std::move(from);
  }

  inline GetPhotoRsq& operator=(GetPhotoRsq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPhotoRsq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPhotoRsq* internal_default_instance() {
    return reinterpret_cast<const GetPhotoRsq*>(
               &_GetPhotoRsq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(GetPhotoRsq* other);
  friend void swap(GetPhotoRsq& a, GetPhotoRsq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPhotoRsq* New() const final {
    return CreateMaybeMessage<GetPhotoRsq>(NULL);
  }

  GetPhotoRsq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetPhotoRsq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetPhotoRsq& from);
  void MergeFrom(const GetPhotoRsq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPhotoRsq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ssp.MessageBase last_message = 4;
  bool has_last_message() const;
  void clear_last_message();
  static const int kLastMessageFieldNumber = 4;
  private:
  const ::ssp::MessageBase& _internal_last_message() const;
  public:
  const ::ssp::MessageBase& last_message() const;
  ::ssp::MessageBase* release_last_message();
  ::ssp::MessageBase* mutable_last_message();
  void set_allocated_last_message(::ssp::MessageBase* last_message);

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 ret = 3;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 3;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.GetPhotoRsq)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_ret();
  void clear_has_ret();
  void set_has_last_message();
  void clear_has_last_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::ssp::MessageBase* last_message_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 ret_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFriendReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.AddFriendReq) */ {
 public:
  AddFriendReq();
  virtual ~AddFriendReq();

  AddFriendReq(const AddFriendReq& from);

  inline AddFriendReq& operator=(const AddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddFriendReq(AddFriendReq&& from) noexcept
    : AddFriendReq() {
    *this = ::std::move(from);
  }

  inline AddFriendReq& operator=(AddFriendReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddFriendReq* internal_default_instance() {
    return reinterpret_cast<const AddFriendReq*>(
               &_AddFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(AddFriendReq* other);
  friend void swap(AddFriendReq& a, AddFriendReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddFriendReq* New() const final {
    return CreateMaybeMessage<AddFriendReq>(NULL);
  }

  AddFriendReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddFriendReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddFriendReq& from);
  void MergeFrom(const AddFriendReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddFriendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // optional int32 other_id = 4;
  bool has_other_id() const;
  void clear_other_id();
  static const int kOtherIdFieldNumber = 4;
  ::google::protobuf::int32 other_id() const;
  void set_other_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.AddFriendReq)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_user_id();
  void clear_has_user_id();
  void set_has_other_id();
  void clear_has_other_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 other_id_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFriendRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssp.AddFriendRsp) */ {
 public:
  AddFriendRsp();
  virtual ~AddFriendRsp();

  AddFriendRsp(const AddFriendRsp& from);

  inline AddFriendRsp& operator=(const AddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddFriendRsp(AddFriendRsp&& from) noexcept
    : AddFriendRsp() {
    *this = ::std::move(from);
  }

  inline AddFriendRsp& operator=(AddFriendRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddFriendRsp* internal_default_instance() {
    return reinterpret_cast<const AddFriendRsp*>(
               &_AddFriendRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(AddFriendRsp* other);
  friend void swap(AddFriendRsp& a, AddFriendRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddFriendRsp* New() const final {
    return CreateMaybeMessage<AddFriendRsp>(NULL);
  }

  AddFriendRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddFriendRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddFriendRsp& from);
  void MergeFrom(const AddFriendRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddFriendRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ver = 1;
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 mess_type = 2;
  bool has_mess_type() const;
  void clear_mess_type();
  static const int kMessTypeFieldNumber = 2;
  ::google::protobuf::int32 mess_type() const;
  void set_mess_type(::google::protobuf::int32 value);

  // optional int32 ret = 3;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 3;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssp.AddFriendRsp)
 private:
  void set_has_ver();
  void clear_has_ver();
  void set_has_mess_type();
  void clear_has_mess_type();
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 mess_type_;
  ::google::protobuf::int32 ret_;
  friend struct ::protobuf_message_5fdefine_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginReq

// optional int32 ver = 1;
inline bool LoginReq::has_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReq::set_has_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReq::clear_has_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReq::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 LoginReq::ver() const {
  // @@protoc_insertion_point(field_get:ssp.LoginReq.ver)
  return ver_;
}
inline void LoginReq::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.LoginReq.ver)
}

// optional int32 mess_type = 2;
inline bool LoginReq::has_mess_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginReq::set_has_mess_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginReq::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginReq::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 LoginReq::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.LoginReq.mess_type)
  return mess_type_;
}
inline void LoginReq::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.LoginReq.mess_type)
}

// optional int32 user_id = 3;
inline bool LoginReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginReq::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 LoginReq::user_id() const {
  // @@protoc_insertion_point(field_get:ssp.LoginReq.user_id)
  return user_id_;
}
inline void LoginReq::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.LoginReq.user_id)
}

// optional string password = 4;
inline bool LoginReq::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReq::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LoginReq::password() const {
  // @@protoc_insertion_point(field_get:ssp.LoginReq.password)
  return password_.GetNoArena();
}
inline void LoginReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ssp.LoginReq.password)
}
#if LANG_CXX11
inline void LoginReq::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ssp.LoginReq.password)
}
#endif
inline void LoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ssp.LoginReq.password)
}
inline void LoginReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ssp.LoginReq.password)
}
inline ::std::string* LoginReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:ssp.LoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_password() {
  // @@protoc_insertion_point(field_release:ssp.LoginReq.password)
  if (!has_password()) {
    return NULL;
  }
  clear_has_password();
  return password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:ssp.LoginReq.password)
}

// -------------------------------------------------------------------

// LoginRsp

// optional int32 ver = 1;
inline bool LoginRsp::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRsp::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRsp::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRsp::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 LoginRsp::ver() const {
  // @@protoc_insertion_point(field_get:ssp.LoginRsp.ver)
  return ver_;
}
inline void LoginRsp::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.LoginRsp.ver)
}

// optional int32 mess_type = 2;
inline bool LoginRsp::has_mess_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRsp::set_has_mess_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRsp::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRsp::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 LoginRsp::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.LoginRsp.mess_type)
  return mess_type_;
}
inline void LoginRsp::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.LoginRsp.mess_type)
}

// optional int32 ret = 3;
inline bool LoginRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 LoginRsp::ret() const {
  // @@protoc_insertion_point(field_get:ssp.LoginRsp.ret)
  return ret_;
}
inline void LoginRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ssp.LoginRsp.ret)
}

// -------------------------------------------------------------------

// LogoutReq

// optional int32 ver = 1;
inline bool LogoutReq::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutReq::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutReq::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutReq::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 LogoutReq::ver() const {
  // @@protoc_insertion_point(field_get:ssp.LogoutReq.ver)
  return ver_;
}
inline void LogoutReq::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.LogoutReq.ver)
}

// optional int32 mess_type = 2;
inline bool LogoutReq::has_mess_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogoutReq::set_has_mess_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogoutReq::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogoutReq::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 LogoutReq::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.LogoutReq.mess_type)
  return mess_type_;
}
inline void LogoutReq::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.LogoutReq.mess_type)
}

// optional int32 user_id = 3;
inline bool LogoutReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogoutReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogoutReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogoutReq::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 LogoutReq::user_id() const {
  // @@protoc_insertion_point(field_get:ssp.LogoutReq.user_id)
  return user_id_;
}
inline void LogoutReq::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.LogoutReq.user_id)
}

// -------------------------------------------------------------------

// LogoutRsp

// optional int32 ver = 1;
inline bool LogoutRsp::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutRsp::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutRsp::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutRsp::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 LogoutRsp::ver() const {
  // @@protoc_insertion_point(field_get:ssp.LogoutRsp.ver)
  return ver_;
}
inline void LogoutRsp::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.LogoutRsp.ver)
}

// optional int32 mess_type = 2;
inline bool LogoutRsp::has_mess_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogoutRsp::set_has_mess_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogoutRsp::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogoutRsp::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 LogoutRsp::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.LogoutRsp.mess_type)
  return mess_type_;
}
inline void LogoutRsp::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.LogoutRsp.mess_type)
}

// optional int32 ret = 3;
inline bool LogoutRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogoutRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogoutRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogoutRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 LogoutRsp::ret() const {
  // @@protoc_insertion_point(field_get:ssp.LogoutRsp.ret)
  return ret_;
}
inline void LogoutRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ssp.LogoutRsp.ret)
}

// -------------------------------------------------------------------

// MessageBase

// optional int32 ver = 1;
inline bool MessageBase::has_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageBase::set_has_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageBase::clear_has_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageBase::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 MessageBase::ver() const {
  // @@protoc_insertion_point(field_get:ssp.MessageBase.ver)
  return ver_;
}
inline void MessageBase::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.MessageBase.ver)
}

// optional int32 message_id = 2;
inline bool MessageBase::has_message_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageBase::set_has_message_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageBase::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageBase::clear_message_id() {
  message_id_ = 0;
  clear_has_message_id();
}
inline ::google::protobuf::int32 MessageBase::message_id() const {
  // @@protoc_insertion_point(field_get:ssp.MessageBase.message_id)
  return message_id_;
}
inline void MessageBase::set_message_id(::google::protobuf::int32 value) {
  set_has_message_id();
  message_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.MessageBase.message_id)
}

// optional int32 publisher = 3;
inline bool MessageBase::has_publisher() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageBase::set_has_publisher() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageBase::clear_has_publisher() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageBase::clear_publisher() {
  publisher_ = 0;
  clear_has_publisher();
}
inline ::google::protobuf::int32 MessageBase::publisher() const {
  // @@protoc_insertion_point(field_get:ssp.MessageBase.publisher)
  return publisher_;
}
inline void MessageBase::set_publisher(::google::protobuf::int32 value) {
  set_has_publisher();
  publisher_ = value;
  // @@protoc_insertion_point(field_set:ssp.MessageBase.publisher)
}

// optional string content = 4;
inline bool MessageBase::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageBase::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageBase::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageBase::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& MessageBase::content() const {
  // @@protoc_insertion_point(field_get:ssp.MessageBase.content)
  return content_.GetNoArena();
}
inline void MessageBase::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ssp.MessageBase.content)
}
#if LANG_CXX11
inline void MessageBase::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ssp.MessageBase.content)
}
#endif
inline void MessageBase::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ssp.MessageBase.content)
}
inline void MessageBase::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ssp.MessageBase.content)
}
inline ::std::string* MessageBase::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:ssp.MessageBase.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageBase::release_content() {
  // @@protoc_insertion_point(field_release:ssp.MessageBase.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageBase::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ssp.MessageBase.content)
}

// optional int32 publish_time = 5;
inline bool MessageBase::has_publish_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageBase::set_has_publish_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageBase::clear_has_publish_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageBase::clear_publish_time() {
  publish_time_ = 0;
  clear_has_publish_time();
}
inline ::google::protobuf::int32 MessageBase::publish_time() const {
  // @@protoc_insertion_point(field_get:ssp.MessageBase.publish_time)
  return publish_time_;
}
inline void MessageBase::set_publish_time(::google::protobuf::int32 value) {
  set_has_publish_time();
  publish_time_ = value;
  // @@protoc_insertion_point(field_set:ssp.MessageBase.publish_time)
}

// -------------------------------------------------------------------

// PublishMessageReq

// optional int32 ver = 1;
inline bool PublishMessageReq::has_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishMessageReq::set_has_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PublishMessageReq::clear_has_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PublishMessageReq::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 PublishMessageReq::ver() const {
  // @@protoc_insertion_point(field_get:ssp.PublishMessageReq.ver)
  return ver_;
}
inline void PublishMessageReq::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.PublishMessageReq.ver)
}

// optional int32 mess_type = 2;
inline bool PublishMessageReq::has_mess_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PublishMessageReq::set_has_mess_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PublishMessageReq::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PublishMessageReq::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 PublishMessageReq::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.PublishMessageReq.mess_type)
  return mess_type_;
}
inline void PublishMessageReq::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.PublishMessageReq.mess_type)
}

// optional int32 user_id = 3;
inline bool PublishMessageReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PublishMessageReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PublishMessageReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PublishMessageReq::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 PublishMessageReq::user_id() const {
  // @@protoc_insertion_point(field_get:ssp.PublishMessageReq.user_id)
  return user_id_;
}
inline void PublishMessageReq::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.PublishMessageReq.user_id)
}

// optional string content = 4;
inline bool PublishMessageReq::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishMessageReq::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PublishMessageReq::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PublishMessageReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& PublishMessageReq::content() const {
  // @@protoc_insertion_point(field_get:ssp.PublishMessageReq.content)
  return content_.GetNoArena();
}
inline void PublishMessageReq::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ssp.PublishMessageReq.content)
}
#if LANG_CXX11
inline void PublishMessageReq::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ssp.PublishMessageReq.content)
}
#endif
inline void PublishMessageReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ssp.PublishMessageReq.content)
}
inline void PublishMessageReq::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ssp.PublishMessageReq.content)
}
inline ::std::string* PublishMessageReq::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:ssp.PublishMessageReq.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishMessageReq::release_content() {
  // @@protoc_insertion_point(field_release:ssp.PublishMessageReq.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishMessageReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ssp.PublishMessageReq.content)
}

// -------------------------------------------------------------------

// PublishMessageRsp

// optional int32 ver = 1;
inline bool PublishMessageRsp::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishMessageRsp::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PublishMessageRsp::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PublishMessageRsp::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 PublishMessageRsp::ver() const {
  // @@protoc_insertion_point(field_get:ssp.PublishMessageRsp.ver)
  return ver_;
}
inline void PublishMessageRsp::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.PublishMessageRsp.ver)
}

// optional int32 mess_type = 2;
inline bool PublishMessageRsp::has_mess_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishMessageRsp::set_has_mess_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PublishMessageRsp::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PublishMessageRsp::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 PublishMessageRsp::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.PublishMessageRsp.mess_type)
  return mess_type_;
}
inline void PublishMessageRsp::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.PublishMessageRsp.mess_type)
}

// optional int32 ret = 3;
inline bool PublishMessageRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PublishMessageRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PublishMessageRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PublishMessageRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 PublishMessageRsp::ret() const {
  // @@protoc_insertion_point(field_get:ssp.PublishMessageRsp.ret)
  return ret_;
}
inline void PublishMessageRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ssp.PublishMessageRsp.ret)
}

// -------------------------------------------------------------------

// GetMessageReq

// optional int32 ver = 1;
inline bool GetMessageReq::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMessageReq::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMessageReq::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMessageReq::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 GetMessageReq::ver() const {
  // @@protoc_insertion_point(field_get:ssp.GetMessageReq.ver)
  return ver_;
}
inline void GetMessageReq::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetMessageReq.ver)
}

// optional int32 mess_type = 2;
inline bool GetMessageReq::has_mess_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMessageReq::set_has_mess_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMessageReq::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMessageReq::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 GetMessageReq::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.GetMessageReq.mess_type)
  return mess_type_;
}
inline void GetMessageReq::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetMessageReq.mess_type)
}

// optional int32 user_id = 3;
inline bool GetMessageReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMessageReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMessageReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMessageReq::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 GetMessageReq::user_id() const {
  // @@protoc_insertion_point(field_get:ssp.GetMessageReq.user_id)
  return user_id_;
}
inline void GetMessageReq::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetMessageReq.user_id)
}

// -------------------------------------------------------------------

// GetMessageRsp

// optional int32 ver = 1;
inline bool GetMessageRsp::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMessageRsp::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMessageRsp::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMessageRsp::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 GetMessageRsp::ver() const {
  // @@protoc_insertion_point(field_get:ssp.GetMessageRsp.ver)
  return ver_;
}
inline void GetMessageRsp::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetMessageRsp.ver)
}

// optional int32 mess_type = 2;
inline bool GetMessageRsp::has_mess_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMessageRsp::set_has_mess_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMessageRsp::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMessageRsp::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 GetMessageRsp::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.GetMessageRsp.mess_type)
  return mess_type_;
}
inline void GetMessageRsp::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetMessageRsp.mess_type)
}

// optional int32 ret = 3;
inline bool GetMessageRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMessageRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMessageRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMessageRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GetMessageRsp::ret() const {
  // @@protoc_insertion_point(field_get:ssp.GetMessageRsp.ret)
  return ret_;
}
inline void GetMessageRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetMessageRsp.ret)
}

// repeated .ssp.MessageBase message_list = 4;
inline int GetMessageRsp::message_list_size() const {
  return message_list_.size();
}
inline void GetMessageRsp::clear_message_list() {
  message_list_.Clear();
}
inline ::ssp::MessageBase* GetMessageRsp::mutable_message_list(int index) {
  // @@protoc_insertion_point(field_mutable:ssp.GetMessageRsp.message_list)
  return message_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ssp::MessageBase >*
GetMessageRsp::mutable_message_list() {
  // @@protoc_insertion_point(field_mutable_list:ssp.GetMessageRsp.message_list)
  return &message_list_;
}
inline const ::ssp::MessageBase& GetMessageRsp::message_list(int index) const {
  // @@protoc_insertion_point(field_get:ssp.GetMessageRsp.message_list)
  return message_list_.Get(index);
}
inline ::ssp::MessageBase* GetMessageRsp::add_message_list() {
  // @@protoc_insertion_point(field_add:ssp.GetMessageRsp.message_list)
  return message_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ssp::MessageBase >&
GetMessageRsp::message_list() const {
  // @@protoc_insertion_point(field_list:ssp.GetMessageRsp.message_list)
  return message_list_;
}

// -------------------------------------------------------------------

// GetPhotoReq

// optional int32 ver = 1;
inline bool GetPhotoReq::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPhotoReq::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPhotoReq::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPhotoReq::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 GetPhotoReq::ver() const {
  // @@protoc_insertion_point(field_get:ssp.GetPhotoReq.ver)
  return ver_;
}
inline void GetPhotoReq::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetPhotoReq.ver)
}

// optional int32 mess_type = 2;
inline bool GetPhotoReq::has_mess_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetPhotoReq::set_has_mess_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetPhotoReq::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetPhotoReq::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 GetPhotoReq::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.GetPhotoReq.mess_type)
  return mess_type_;
}
inline void GetPhotoReq::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetPhotoReq.mess_type)
}

// optional int32 user_id = 3;
inline bool GetPhotoReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetPhotoReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetPhotoReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetPhotoReq::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 GetPhotoReq::user_id() const {
  // @@protoc_insertion_point(field_get:ssp.GetPhotoReq.user_id)
  return user_id_;
}
inline void GetPhotoReq::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetPhotoReq.user_id)
}

// -------------------------------------------------------------------

// GetPhotoRsq

// optional int32 ver = 1;
inline bool GetPhotoRsq::has_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetPhotoRsq::set_has_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetPhotoRsq::clear_has_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetPhotoRsq::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 GetPhotoRsq::ver() const {
  // @@protoc_insertion_point(field_get:ssp.GetPhotoRsq.ver)
  return ver_;
}
inline void GetPhotoRsq::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetPhotoRsq.ver)
}

// optional int32 mess_type = 2;
inline bool GetPhotoRsq::has_mess_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetPhotoRsq::set_has_mess_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetPhotoRsq::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetPhotoRsq::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 GetPhotoRsq::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.GetPhotoRsq.mess_type)
  return mess_type_;
}
inline void GetPhotoRsq::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetPhotoRsq.mess_type)
}

// optional int32 ret = 3;
inline bool GetPhotoRsq::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetPhotoRsq::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetPhotoRsq::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetPhotoRsq::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GetPhotoRsq::ret() const {
  // @@protoc_insertion_point(field_get:ssp.GetPhotoRsq.ret)
  return ret_;
}
inline void GetPhotoRsq::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ssp.GetPhotoRsq.ret)
}

// optional .ssp.MessageBase last_message = 4;
inline bool GetPhotoRsq::has_last_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPhotoRsq::set_has_last_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPhotoRsq::clear_has_last_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPhotoRsq::clear_last_message() {
  if (last_message_ != NULL) last_message_->Clear();
  clear_has_last_message();
}
inline const ::ssp::MessageBase& GetPhotoRsq::_internal_last_message() const {
  return *last_message_;
}
inline const ::ssp::MessageBase& GetPhotoRsq::last_message() const {
  const ::ssp::MessageBase* p = last_message_;
  // @@protoc_insertion_point(field_get:ssp.GetPhotoRsq.last_message)
  return p != NULL ? *p : *reinterpret_cast<const ::ssp::MessageBase*>(
      &::ssp::_MessageBase_default_instance_);
}
inline ::ssp::MessageBase* GetPhotoRsq::release_last_message() {
  // @@protoc_insertion_point(field_release:ssp.GetPhotoRsq.last_message)
  clear_has_last_message();
  ::ssp::MessageBase* temp = last_message_;
  last_message_ = NULL;
  return temp;
}
inline ::ssp::MessageBase* GetPhotoRsq::mutable_last_message() {
  set_has_last_message();
  if (last_message_ == NULL) {
    auto* p = CreateMaybeMessage<::ssp::MessageBase>(GetArenaNoVirtual());
    last_message_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ssp.GetPhotoRsq.last_message)
  return last_message_;
}
inline void GetPhotoRsq::set_allocated_last_message(::ssp::MessageBase* last_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete last_message_;
  }
  if (last_message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      last_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, last_message, submessage_arena);
    }
    set_has_last_message();
  } else {
    clear_has_last_message();
  }
  last_message_ = last_message;
  // @@protoc_insertion_point(field_set_allocated:ssp.GetPhotoRsq.last_message)
}

// -------------------------------------------------------------------

// AddFriendReq

// optional int32 ver = 1;
inline bool AddFriendReq::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendReq::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendReq::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendReq::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 AddFriendReq::ver() const {
  // @@protoc_insertion_point(field_get:ssp.AddFriendReq.ver)
  return ver_;
}
inline void AddFriendReq::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.AddFriendReq.ver)
}

// optional int32 mess_type = 2;
inline bool AddFriendReq::has_mess_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriendReq::set_has_mess_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriendReq::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriendReq::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 AddFriendReq::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.AddFriendReq.mess_type)
  return mess_type_;
}
inline void AddFriendReq::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.AddFriendReq.mess_type)
}

// optional int32 user_id = 3;
inline bool AddFriendReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFriendReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFriendReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFriendReq::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 AddFriendReq::user_id() const {
  // @@protoc_insertion_point(field_get:ssp.AddFriendReq.user_id)
  return user_id_;
}
inline void AddFriendReq::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.AddFriendReq.user_id)
}

// optional int32 other_id = 4;
inline bool AddFriendReq::has_other_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddFriendReq::set_has_other_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddFriendReq::clear_has_other_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddFriendReq::clear_other_id() {
  other_id_ = 0;
  clear_has_other_id();
}
inline ::google::protobuf::int32 AddFriendReq::other_id() const {
  // @@protoc_insertion_point(field_get:ssp.AddFriendReq.other_id)
  return other_id_;
}
inline void AddFriendReq::set_other_id(::google::protobuf::int32 value) {
  set_has_other_id();
  other_id_ = value;
  // @@protoc_insertion_point(field_set:ssp.AddFriendReq.other_id)
}

// -------------------------------------------------------------------

// AddFriendRsp

// optional int32 ver = 1;
inline bool AddFriendRsp::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendRsp::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendRsp::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendRsp::clear_ver() {
  ver_ = 0;
  clear_has_ver();
}
inline ::google::protobuf::int32 AddFriendRsp::ver() const {
  // @@protoc_insertion_point(field_get:ssp.AddFriendRsp.ver)
  return ver_;
}
inline void AddFriendRsp::set_ver(::google::protobuf::int32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ssp.AddFriendRsp.ver)
}

// optional int32 mess_type = 2;
inline bool AddFriendRsp::has_mess_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriendRsp::set_has_mess_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriendRsp::clear_has_mess_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriendRsp::clear_mess_type() {
  mess_type_ = 0;
  clear_has_mess_type();
}
inline ::google::protobuf::int32 AddFriendRsp::mess_type() const {
  // @@protoc_insertion_point(field_get:ssp.AddFriendRsp.mess_type)
  return mess_type_;
}
inline void AddFriendRsp::set_mess_type(::google::protobuf::int32 value) {
  set_has_mess_type();
  mess_type_ = value;
  // @@protoc_insertion_point(field_set:ssp.AddFriendRsp.mess_type)
}

// optional int32 ret = 3;
inline bool AddFriendRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFriendRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFriendRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFriendRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 AddFriendRsp::ret() const {
  // @@protoc_insertion_point(field_get:ssp.AddFriendRsp.ret)
  return ret_;
}
inline void AddFriendRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ssp.AddFriendRsp.ret)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ssp

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_message_5fdefine_2eproto
